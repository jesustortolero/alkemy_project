[{"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\App.js":"1","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\index.js":"2","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\interface\\Interface.js":"3","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Greetings.js":"4","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Total.js":"5","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Summary.js":"6","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Home.js":"7","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\log\\Log.js":"8","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\UserForm.js":"9","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\TransRegForm.js":"10","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\LogContext.js":"11","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\UserContext.js":"12","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Transactions.js":"13","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\TransactionsTable.js":"14"},{"size":875,"mtime":1606956508671,"results":"15","hashOfConfig":"16"},{"size":198,"mtime":1606887447174,"results":"17","hashOfConfig":"16"},{"size":541,"mtime":1606910297122,"results":"18","hashOfConfig":"16"},{"size":256,"mtime":1606911217270,"results":"19","hashOfConfig":"16"},{"size":679,"mtime":1606957838264,"results":"20","hashOfConfig":"16"},{"size":1061,"mtime":1606957873653,"results":"21","hashOfConfig":"16"},{"size":2039,"mtime":1606957742041,"results":"22","hashOfConfig":"16"},{"size":4228,"mtime":1606956854319,"results":"23","hashOfConfig":"16"},{"size":10734,"mtime":1606890031315,"results":"24","hashOfConfig":"16"},{"size":4682,"mtime":1606905530765,"results":"25","hashOfConfig":"16"},{"size":111,"mtime":1606908064708,"results":"26","hashOfConfig":"16"},{"size":113,"mtime":1606908160323,"results":"27","hashOfConfig":"16"},{"size":940,"mtime":1606957956026,"results":"28","hashOfConfig":"16"},{"size":1125,"mtime":1606957381236,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"1p1aue9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\App.js",["66"],"import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Interface from \"./components/interface/Interface\";\nimport Log from \"./components/log/Log\";\nimport UserContext from \"./components/UserContext\";\nimport LogContext from \"./components/LogContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n\n\nfunction App() {\n  /* useContext states */\n  const [log, setLog] = useState(false);\n  const[userInfo,setUserInfo]=useState({})\n  return (\n    <>\n      <Container fluid>\n        <LogContext.Provider value={{ log, setLog }}>\n          <UserContext.Provider value={{userInfo,setUserInfo}}>\n            {/* conditional rendering login / interface */}\n            {log == true ? <Interface /> : <Log />}\n          </UserContext.Provider>\n        </LogContext.Provider>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\index.js",[],["67","68"],"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\interface\\Interface.js",["69","70","71","72","73"],"import React, {useState} from \"react\";\r\nimport TrasRegForm from \"../TransRegForm\"\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Home from \"../Home\";\r\n\r\n\r\n\r\nconst Interface = () => {\r\n\r\n  \r\n  const [screen, setScreen] = useState('Home');\r\n\r\n  switch (screen){\r\n    case 'Home':\r\n    return(\r\n      <>\r\n      <Home />\r\n      </>\r\n    )\r\n    break;\r\n    case 'Create':\r\n\r\n      return (\r\n        <>\r\n        <Row>\r\n        <TrasRegForm />\r\n        </Row>\r\n        </>\r\n      )\r\n\r\n    break;\r\n\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default Interface;\r\n","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Greetings.js",["74","75"],"import React, { useState } from \"react\";\r\n\r\nconst Greeatings = (props) => {\r\n  const [User, setUser] = useState(\"usuario\");\r\n\r\n  return (\r\n    <>\r\n      <h4>¡Hola! {props.name} aquí esta tu balance:</h4>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Greeatings;\r\n","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Total.js",["76","77"],"import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst Total = (props) => {\r\n\r\n  const ingreso = props.Transs.filter(Element=> Element.Tipo =='ingreso').reduce((total,val)=>total+=val.Monto,0\r\n  )\r\nconst egreso =props.Transs.filter(Element=> Element.Tipo =='egreso').reduce((total,val)=>total+=val.Monto,0\r\n  )\r\n\r\n const total = (ingreso-egreso);\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <Col xs={{ offset: 1 }} md={{ offset: 3 }}>\r\n        <Row className=\"\">\r\n          <h5>Balance Total</h5>\r\n        </Row>\r\n        <Row className=\"\">\r\n          <h2> {total.toLocaleString()}</h2>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Total;\r\n","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Summary.js",["78","79"],"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Home.js",[],"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\log\\Log.js",["80","81","82","83","84","85","86","87"],"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\UserForm.js",["88","89","90"],"import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst UserForm = () => {\r\n\r\n  /* Display mensaje error */\r\n  const [errorStatus, setErrorStatus] = useState(false);\r\n  /* Dsplay mensaje success */\r\n  const [successStatus, setSuccessStatus] = useState(false);\r\n\r\n  /* state mensaje error */\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  return (\r\n\r\n    /* ----------- Formik tag ------------ */\r\n    <Formik\r\n      initialValues={{\r\n        Nombre: \"\",\r\n        Apellido: \"\",\r\n        Email: \"\",\r\n        confEmail: \"\",\r\n        Password: \"\",\r\n        ConfPassword: \"\",\r\n      }}\r\n      /* ---------------------OnSubmit Handeler---------------------*/\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        console.log(values);\r\n\r\n        /* -------- Post --------- */\r\n        fetch(\"http://localhost:3002/reg\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(values),\r\n        }).then((res) => {\r\n            console.log(\"respuesta 1:\", res);\r\n            return res.json();\r\n          }).then((data) => {\r\n            console.log(\"respuesta 2: \",data);\r\n            setSubmitting(false);\r\n            resetForm();\r\n\r\n            setErrorStatus(false);\r\n            setSuccessStatus(true);\r\n\r\n            /* ----- ERROR ----- */\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"error: \",error);\r\n            setStatus(error).setSubmitting(false);\r\n            setErrorStatus(true);\r\n            setSuccessStatus(false);\r\n          });\r\n      }}\r\n      /*  --------------------- validationSchema --------------------- */\r\n      validationSchema={Yup.object().shape({\r\n        Nombre: Yup.string().required(\"Campo requerido.\"),\r\n        Apellido: Yup.string().required(\"Campo requerido.\"),\r\n        Email: Yup.string()\r\n          .email(\"La dirección email debe ser valida.\")\r\n          .required(\"Campo requerido.\"),\r\n        confEmail: Yup.string()\r\n          .email(\"La dirección email debe ser valida.\")\r\n          .required(\"Campo requerido.\")\r\n          .test(\"confEmail\", \"Los emails no coinciden\", function (value) {\r\n            return this.parent.Email === value;\r\n          }),\r\n        Password: Yup.string()\r\n          .required(\"Campo requerido.\")\r\n          .min(\r\n            8,\r\n            \"Contraseña muy corta - la contraseña debe contener al menos 8 caracteres.\"\r\n          )\r\n          .matches(\r\n            /(?=.*[0-9])/,\r\n            \"La contraseña debe contener al menos un número\"\r\n          ),\r\n        ConfPassword: Yup.string()\r\n          .required(\"Campo requerido.\")\r\n          .min(\r\n            8,\r\n            \"Contraseña muy corta - la contraseña debe contener al menos 8 caracteres.\"\r\n          )\r\n          .matches(\r\n            /(?=.*[0-9])/,\r\n            \"La contraseña debe contener al menos un número\"\r\n          )\r\n          .test(\"confEmail\", \"Las contraseñas no coinciden\", function (value) {\r\n            return this.parent.Password === value;\r\n          }),\r\n      })}\r\n    >\r\n      {/* --------------------- Formik Props --------------------- */}\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n\r\n        /* --------------------- React-Bootstrap From ---------------------  */\r\n        return (\r\n          <>\r\n            <Row className=\"justify-content-center\" style={{marginTop:\"30px\"}}>\r\n              <Col xs={6}>\r\n\r\n                {/* Form header */}\r\n                <h3>Formulario de Registro</h3>\r\n\r\n                <Alert show={successStatus} variant=\"success\">\r\n                  ¡Usuario registrado exitosamente!\r\n                </Alert>\r\n\r\n                <Alert show={errorStatus} variant=\"danger\">\r\n                  ¡Algo salió mal! - {status}\r\n                </Alert>\r\n\r\n                {/* Input Nombre */}\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formFirstName\">\r\n                    <Form.Label>Nombre</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Nombre\"\r\n                      type=\"text\"\r\n                      name=\"Nombre\"\r\n                      value={values.Nombre}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={!!errors.Nombre && touched.Nombre && \"error\"}\r\n                    />\r\n                    {/* Mensage de ERROR Nombre */}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.Nombre}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  {/* Input Apellido */}\r\n                  <Form.Group controlId=\"formLastName\">\r\n                    <Form.Label>Apellido</Form.Label>\r\n                    <Form.Control\r\n                      name=\"Apellido\"\r\n                      placeholder=\"Apellido\"\r\n                      value={values.Apellido}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={\r\n                        !!errors.Apellido && touched.Apellido && \"error\"\r\n                      }\r\n                    />\r\n                    {/* Mensaje de error Apellido */}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.Apellido}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  {/* Input Email */}\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      name=\"Email\"\r\n                      value={values.Email}\r\n                      placeholder=\"Dirección email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={!!errors.Email && touched.Email && \"error\"}\r\n                    />\r\n                    {/* Mensaje de ERROR Email */}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.Email}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  {/* Input Confirmar Email */}\r\n                  <Form.Group controlId=\"formConfirmEmail\">\r\n                    <Form.Label>Confirmar Email</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Confirmar email\"\r\n                      name=\"confEmail\"\r\n                      placeholder=\"Dirección email\"\r\n                      value={values.confEmail}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={\r\n                        !!errors.confEmail && touched.confEmail && \"error\"\r\n                      }\r\n                    />\r\n\r\n                    {/* Mensaje de ERROR Confirmar Email */}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.confEmail}\r\n                    </Form.Control.Feedback>\r\n\r\n                    {/* Mensaje inicial Confrimar Email */}\r\n                    {!errors.confEmail && (\r\n                      <Form.Text className=\"text-muted\">\r\n                        Confirma tu direccion de correo electronico.\r\n                      </Form.Text>\r\n                    )}\r\n                  </Form.Group>\r\n\r\n                  {/* Input Contraseña */}\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Contraseña</Form.Label>\r\n                    <Form.Control\r\n                      type=\"Password\"\r\n                      placeholder=\"Contraseña\"\r\n                      name=\"Password\"\r\n                      value={values.Password}\r\n                      placeholder=\"Dirección email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={\r\n                        !!errors.Password && touched.Password && \"error\"\r\n                      }\r\n                    />\r\n\r\n                    {/* Mensaje de ERROR Contraseña */}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.Password}\r\n                    </Form.Control.Feedback>\r\n\r\n                    {/* Mensaje inicial Contraseña */}\r\n                    {!errors.Password && (\r\n                      <Form.Text className=\"text-muted\">\r\n                        La contraseña deberá contener al menos 8 caracteres y al\r\n                        menos un número.\r\n                      </Form.Text>\r\n                    )}\r\n                  </Form.Group>\r\n\r\n                  {/* Input Confirmar Contraseña */}\r\n                  <Form.Group>\r\n                    <Form.Label>Confirmar Contraseña</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Confirmar Contraseña\"\r\n                      controlId=\"formConfirmPassword\"\r\n                      value={values.ConfPassword}\r\n                      name=\"ConfPassword\"\r\n                      placeholder=\"Dirección email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={\r\n                        !!errors.ConfPassword && touched.ConfPassword && \"error\"\r\n                      }\r\n                    />\r\n\r\n                    {/* Mensaje de ERROR Confirmar Contraseña */}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ConfPassword}\r\n                    </Form.Control.Feedback>\r\n\r\n                    {/* Mensaje inicial Confirmar Contraseña */}\r\n                    {!errors.ConfPassword && (\r\n                      <Form.Text className=\"text-muted\">\r\n                        Confirmar contraseña\r\n                      </Form.Text>\r\n                    )}\r\n                  </Form.Group>\r\n\r\n                  {/* --------------------- Submit Button --------------------- */}\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\TransRegForm.js",["91","92"],"import React from \"react\";\r\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst TrasRegForm = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        Concepto: \"\",\r\n        Monto: \"\",\r\n        Fecha: \"\",\r\n        Tipo:\"\"\r\n      }}\r\n      /* ---------------------OnSubmit Handeler---------------------*/\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        /* -------- Post --------- */\r\n        fetch(\"http://localhost:3002/reg-trans\", {\r\n          credentials: \"omit\",\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(values),\r\n        })\r\n          .then((res) => {\r\n            return res.json();\r\n\r\n            /* ----- SUCCESS ----- */\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n            setSubmitting(false);\r\n            resetForm();\r\n\r\n            /* ----- ERROR ----- */\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }}\r\n      /*  --------------------- validationSchema --------------------- */\r\n      validationSchema={Yup.object().shape({\r\n        Concepto: Yup.string().required(\"Campo requerido.\"),\r\n        Monto: Yup.string().required(\"Campo requerido.\"),\r\n        Fecha: Yup.date().required(\"Campo requerido.\"),\r\n        Tipo: Yup.string().required(\"Campo requerido.\")\r\n\r\n      })}\r\n    >\r\n      {/* --------------------- Formik Props --------------------- */}\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <>\r\n            <Container>\r\n              <Row className=\"justify-content-center\">\r\n                <Col md={6}>\r\n                  <Row>\r\n                    <h2>Registro de transacción</h2>\r\n                  </Row>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"Concepto\">\r\n                      <Form.Label>Concepto</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Concepto\"\r\n                        value={values.Concepto}\r\n                        name=\"Concepto\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={\r\n                          !!errors.Concepto && touched.Concepto && \"error\"\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"Monto\">\r\n                      <Form.Label>Monto</Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Monto\"\r\n                        type=\"text\"\r\n                        value={values.Monto}\r\n                        name=\"Monto\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={!!errors.Monto && touched.Monto && \"error\"}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"Fecha\">\r\n                      <Form.Label>Fecha</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        value={values.Fecha}\r\n                        name=\"Fecha\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={!!errors.Fecha && touched.Fecha && \"error\"}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"Tipo\">\r\n                      <Form.Label>Tipo</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"egreso/ingreso\"\r\n                        value={values.Tipo}\r\n                        name=\"Tipo\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={\r\n                          !!errors.Tipo && touched.Tipo && \"error\"\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Registrar\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default TrasRegForm;\r\n","C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\LogContext.js",[],"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\UserContext.js",[],"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\Transactions.js",[],"C:\\Users\\Jesus\\Documents\\alkemy_project\\client-balance-sheet\\src\\components\\TransactionsTable.js",["93","94"],"import React, { useState } from \"react\";\r\nimport { Row, Col, Table } from \"react-bootstrap\";\r\nimport Transactions from \"./Transactions\";\r\n\r\nconst TransactionsTable = (props) => {\r\n  /* Map iteration Transactions componets */\r\n  const element = props.Transs.slice(0,10).map((Element) => {\r\n    return(<Transactions\r\n      Id={Element.ID}\r\n      Concepto={Element.Concepto}\r\n      Monto={Element.Monto.toLocaleString()}\r\n      Fecha={Element.Fecha.slice(0,10)}\r\n      Tipo={Element.Tipo}\r\n    />)\r\n  })\r\n  return (\r\n    <>\r\n      <Col style={{marginTop:\"20px\"}}>\r\n\r\n        {/* Title */}\r\n          <h5>Ultimas 10 Transacciones</h5>\r\n        \r\n          <Table striped bordered hover>\r\n\r\n            {/* Table head */}\r\n            <thead>\r\n              <tr>\r\n                <th>Concepto</th>\r\n                <th>Monto</th>\r\n                <th>Fecha</th>\r\n                <th>tipo</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Tables Rows */}\r\n              {element}\r\n            </tbody>\r\n          </Table>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionsTable;\r\n",{"ruleId":"95","severity":1,"message":"96","line":22,"column":18,"nodeType":"97","messageId":"98","endLine":22,"endColumn":20},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":15,"nodeType":"105","messageId":"106","endLine":3,"endColumn":18},{"ruleId":"103","severity":1,"message":"107","line":11,"column":18,"nodeType":"105","messageId":"106","endLine":11,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":13,"column":3,"nodeType":"110","messageId":"111","endLine":33,"endColumn":4},{"ruleId":"112","severity":1,"message":"113","line":20,"column":5,"nodeType":"114","messageId":"115","endLine":20,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":31,"column":5,"nodeType":"114","messageId":"115","endLine":31,"endColumn":11},{"ruleId":"103","severity":1,"message":"116","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"117","line":4,"column":16,"nodeType":"105","messageId":"106","endLine":4,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":6,"column":62,"nodeType":"97","messageId":"98","endLine":6,"endColumn":64},{"ruleId":"95","severity":1,"message":"96","line":8,"column":58,"nodeType":"97","messageId":"98","endLine":8,"endColumn":60},{"ruleId":"95","severity":1,"message":"96","line":7,"column":62,"nodeType":"97","messageId":"98","endLine":7,"endColumn":64},{"ruleId":"95","severity":1,"message":"96","line":11,"column":60,"nodeType":"97","messageId":"98","endLine":11,"endColumn":62},{"ruleId":"103","severity":1,"message":"118","line":3,"column":45,"nodeType":"105","messageId":"106","endLine":3,"endColumn":50},{"ruleId":"103","severity":1,"message":"119","line":13,"column":10,"nodeType":"105","messageId":"106","endLine":13,"endColumn":13},{"ruleId":"103","severity":1,"message":"120","line":14,"column":10,"nodeType":"105","messageId":"106","endLine":14,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":38,"column":13,"nodeType":"123","messageId":"124","endLine":38,"endColumn":35},{"ruleId":"103","severity":1,"message":"125","line":63,"column":11,"nodeType":"105","messageId":"106","endLine":63,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":85,"column":25,"nodeType":"128","endLine":85,"endColumn":54},{"ruleId":"126","severity":1,"message":"127","line":100,"column":25,"nodeType":"128","endLine":100,"endColumn":49},{"ruleId":"126","severity":1,"message":"127","line":103,"column":25,"nodeType":"128","endLine":103,"endColumn":49},{"ruleId":"126","severity":1,"message":"127","line":189,"column":23,"nodeType":"128","endLine":189,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":219,"column":23,"nodeType":"128","endLine":219,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":250,"column":23,"nodeType":"128","endLine":250,"endColumn":52},{"ruleId":"103","severity":1,"message":"118","line":2,"column":45,"nodeType":"105","messageId":"106","endLine":2,"endColumn":50},{"ruleId":"103","severity":1,"message":"125","line":57,"column":11,"nodeType":"105","messageId":"106","endLine":57,"endColumn":23},{"ruleId":"103","severity":1,"message":"129","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"130","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'setScreen' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'User' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Alert' is defined but never used.","'log' is assigned a value but never used.","'userInfo' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'isSubmitting' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]